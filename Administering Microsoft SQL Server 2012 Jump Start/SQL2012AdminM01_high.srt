1
00:00:00,333 --> 00:00:06,333
[Music]

2
00:00:17,483 --> 00:00:21,466
Good morning everyone. Welcome to the Administering SQL Server

3
00:00:21,483 --> 00:00:26,466
2012 Jump Start. My name is Rich Currey. I am here with Mister

4
00:00:26,483 --> 00:00:29,466
George Squillace. He's got SQL in the name. Good morning George.

5
00:00:29,483 --> 00:00:30,466
>> Hey. Good morning Rich.

6
00:00:32,200 --> 00:00:35,283
>> How about a little bit about yourself sir?

7
00:00:35,366 --> 00:00:39,466
>> All righty. Well, I come from New Horizon's Great Lakes based

8
00:00:39,483 --> 00:00:44,400
in Michigan. I've been a long-term Technology Trainer. Been a

9
00:00:44,483 --> 00:00:48,466
long term Microsoft Certified Trainer. Over the last bunch of

10
00:00:48,483 --> 00:00:53,466
years my focus has solely been on SQL Server, which I like.

11
00:00:54,483 --> 00:00:55,466
Rich, can I brag on you a little?

12
00:00:56,0 --> 00:00:56,466
>> Yeah. Go for it.

13
00:00:56,483 --> 00:00:59,450
>> I want to brag on you and well, maybe that's not the right

14
00:00:59,483 --> 00:01:04,466
word, but some of you are here for the specific purpose of certifying,

15
00:01:04,483 --> 00:01:09,466
preparing to certify, icing off that particular preparation process.

16
00:01:10,466 --> 00:01:14,466
One good thing, we've passed all seven SQL 2012 exams- >> Oh

17
00:01:14,483 --> 00:01:15,183
yeah.

18
00:01:15,266 --> 00:01:19,466
>> And I know you've satin the exam booth on awful lot of times-

19
00:01:19,483 --> 00:01:21,300
>> Nowhere near what you have though, George.

20
00:01:21,383 --> 00:01:23,466
>> 96 times in the exam booth.

21
00:01:23,483 --> 00:01:27,466
>> Mister professional test-taker right there. That's hard to

22
00:01:27,483 --> 00:01:28,466
do, let me tell you.

23
00:01:29,483 --> 00:01:33,466
>> So for those who are in particular interested in that area

24
00:01:33,483 --> 00:01:36,466
you're going to have a good day. A bit of other background too.

25
00:01:36,483 --> 00:01:37,466
Now how about you?

26
00:01:37,483 --> 00:01:42,283
>> Well, I have been a trainer with Microsoft Technologies for

27
00:01:42,366 --> 00:01:46,466
about the last 10 years with the New Horizons, and prior to that

28
00:01:46,483 --> 00:01:50,466
I spent about 20 years in Industry. I've been playing with computers

29
00:01:50,166 --> 00:01:52,466
since I was 10 years old, and we're not going to tell you when

30
00:01:52,483 --> 00:01:54,466
that started because that would tell you how old I am, and I'm

31
00:01:54,483 --> 00:01:59,166
not going to do that. I have been a DBA professionally, a developer,

32
00:01:59,250 --> 00:02:02,466
and a bunch of other stuff, and hopefully some of that experience

33
00:02:02,483 --> 00:02:06,466
is going to come across and help you folks out of this day.

34
00:02:08,350 --> 00:02:10,466
So George how about it? What are we going to be doing today?

35
00:02:10,483 --> 00:02:12,466
You want to give us an overview?

36
00:02:12,483 --> 00:02:15,466
>> Excellent. I like this product. I just want to go on the record

37
00:02:15,483 --> 00:02:19,166
saying I like the product. One of the things I like about it

38
00:02:19,483 --> 00:02:24,433
is that this product is huge, and we have an awful lot to take

39
00:02:24,483 --> 00:02:28,466
a look at in terms of administration. So we'll take a look first

40
00:02:28,483 --> 00:02:31,266
at how we got the product on a box and some of the installation

41
00:02:31,350 --> 00:02:32,466
decisions along the way.

42
00:02:32,483 --> 00:02:33,466
>> Okay.

43
00:02:33,483 --> 00:02:36,466
>> Module Two, after we get to the product on the box, now what?

44
00:02:36,483 --> 00:02:41,450
What are some of the server level, database level settings and

45
00:02:41,483 --> 00:02:44,233
things that we do? What are some maintenance tasks that we do

46
00:02:44,316 --> 00:02:47,466
because the product does need some care and feeding.

47
00:02:47,483 --> 00:02:51,466
SQL Server operates in a dynamic environment, and things are

48
00:02:51,483 --> 00:02:55,466
always changing and we need to figure out what's going on, improve

49
00:02:55,216 --> 00:02:58,400
performance, troubleshoot; so we'll take a look at some tools

50
00:02:58,450 --> 00:02:58,466
in that area.

51
00:02:58,483 --> 00:03:00,466
>> I'm looking forward to that one because I haven't done a lot

52
00:03:00,483 --> 00:03:03,383
of troubleshooting. I just don't tend to have problems.

53
00:03:03,466 --> 00:03:04,416
>> Well, there you go.

54
00:03:05,166 --> 00:03:09,466
So then we'll take a look at managing data. After that a module

55
00:03:09,483 --> 00:03:12,466
of particular concern, Implementing Security.

56
00:03:12,483 --> 00:03:13,466
>> Okay.

57
00:03:13,483 --> 00:03:16,466
>> So we'll see the various onion layers of security, the moving

58
00:03:16,483 --> 00:03:20,466
parts of the security subsystem, and then, again, a pet favorite

59
00:03:20,483 --> 00:03:22,466
topic of mine and that is High Availability.

60
00:03:23,233 --> 00:03:24,466
>> Yeah. That's going to be a good one.

61
00:03:24,483 --> 00:03:27,466
>> So we have a lot of the High Availability options and, you

62
00:03:27,483 --> 00:03:29,466
know- >> Awesome.

63
00:03:29,483 --> 00:03:32,466
>> So we're going to get decent survey of those. And you will

64
00:03:32,483 --> 00:03:36,233
want to have a good overview survey of those before the exam.

65
00:03:38,483 --> 00:03:39,466
All righty. Setting Expectations.

66
00:03:40,483 --> 00:03:45,466
This particular jumpstart would serve a number of people, those

67
00:03:45,183 --> 00:03:48,466
that already have some experience with SQL Server you still have

68
00:03:48,483 --> 00:03:52,250
plenty to learn. We'll definitely cover an awful lot of topics.

69
00:03:52,333 --> 00:03:55,466
You're going to pick up something. There are those who all of

70
00:03:55,483 --> 00:03:58,466
a sudden now sit in front of a SharePoint Server or some other

71
00:03:58,483 --> 00:04:03,183
box that requires the SQL Server product. We call them an Accidental DBA.

72
00:04:03,266 --> 00:04:05,466
You're going to you have lots to gain from this as well.

73
00:04:05,483 --> 00:04:07,466
>> There are a lot of those out there too.

74
00:04:07,483 --> 00:04:11,183
>> Oh, no doubt. I mean so many Microsoft products now require

75
00:04:11,266 --> 00:04:15,466
a SQL Server and another third product products as well and after

76
00:04:15,483 --> 00:04:22,466
that, those that have a laser focus on passing that 70-462 Certification Exam.

77
00:04:22,483 --> 00:04:23,466
>> Absolutely.

78
00:04:24,483 --> 00:04:29,333
>> Some suggested materials to help you out and to describe the

79
00:04:29,483 --> 00:04:33,466
personal, be in the best position to succeed, got to have basic

80
00:04:33,483 --> 00:04:36,466
familiarity with the product. Our session here is designed for

81
00:04:36,483 --> 00:04:39,466
those that have at least some exposure to the product and definitely

82
00:04:39,483 --> 00:04:41,466
relational database exposure too.

83
00:04:41,483 --> 00:04:42,466
>> Makes sense.

84
00:04:42,483 --> 00:04:47,466
>> Also, if you are brand-new to Windows and the User Interface

85
00:04:47,483 --> 00:04:51,183
and things like that this will be a tougher session. So got

86
00:04:51,266 --> 00:04:52,466
to have some Windows Server experience.

87
00:04:52,483 --> 00:04:53,466
>> Okay.

88
00:04:53,483 --> 00:04:54,250
>> Book wise.

89
00:04:55,483 --> 00:05:00,466
So with the books we've actually got Microsoft Press, the Exam

90
00:05:00,483 --> 00:05:05,466
Training Kit for the 70 - 462, Administering SQL Server 2012

91
00:05:05,483 --> 00:05:08,466
Databases is a great resource; and additionally, if you like

92
00:05:08,483 --> 00:05:11,466
what you're hearing today and you want some more foundation,

93
00:05:11,483 --> 00:05:15,366
there is a five day Microsoft Official Curriculum Course, the

94
00:05:15,450 --> 00:05:17,466
10775 class.

95
00:05:18,483 --> 00:05:23,466
That class is offered by the folks that we train for, so you

96
00:05:23,483 --> 00:05:27,466
might actually get a chance to spend five whole days with us.

97
00:05:27,483 --> 00:05:30,466
That would be New Horizons. If you go to the Microsoft Learning

98
00:05:30,483 --> 00:05:35,416
Site and search on Classes you'll get more information there

99
00:05:35,483 --> 00:05:39,366
as well. So George, how about that MVA Community? We've already

100
00:05:39,450 --> 00:05:41,216
been a part of that a little bit, right?

101
00:05:41,483 --> 00:05:44,0
>> No doubt. Big online community.

102
00:05:44,483 --> 00:05:50,466
>> It is. Lots of folks, lots of things to learn, and you get points.

103
00:05:51,483 --> 00:05:57,466
If you log in and use this voucher code, which is

104
00:05:59,333 --> 00:06:00,466
AdminSQL, not

105
00:06:02,416 --> 00:06:11,466
DWSQL, the slide has a little bit of an issue there, so AdminSQL

106
00:06:11,483 --> 00:06:15,0
is the correct code, put that in. It expires on November 19,

107
00:06:15,483 --> 00:06:17,466
and you will get 50 MVA points.

108
00:06:18,483 --> 00:06:20,466
>> So George, you ready to get started here? Should give these

109
00:06:20,483 --> 00:06:22,466
folks something to think about?

110
00:06:22,483 --> 00:06:23,466
>> Let's roll.

111
00:06:23,200 --> 00:06:26,466
>> All right. So this first module, go at it, bud.

112
00:06:26,483 --> 00:06:29,466
>> All righty. So first module, Installation and Configuration

113
00:06:29,483 --> 00:06:34,466
of SQL Server. We can't get into the really grimy details of

114
00:06:34,483 --> 00:06:37,466
all the decision-making that you have to do, so we want to take

115
00:06:37,483 --> 00:06:42,466
maybe a tree top or a little higher level look at the major decisions

116
00:06:42,483 --> 00:06:45,466
along the way, and in particular, some of the critical decisions

117
00:06:45,483 --> 00:06:46,466
along the way.

118
00:06:47,483 --> 00:06:53,466
So in addition to installation decisions we have an IO bound product.

119
00:06:53,483 --> 00:06:55,466
So we have to design storage well.

120
00:06:55,483 --> 00:06:57,283
>> That makes sense.

121
00:06:57,366 --> 00:07:01,466
>> There are certain particular errors that a DBA can make in

122
00:07:01,483 --> 00:07:06,466
relationship to growth, storage, etc. So we have to lay those

123
00:07:06,183 --> 00:07:07,466
out on the table as well.

124
00:07:07,483 --> 00:07:08,433
>> Absolutely.

125
00:07:08,483 --> 00:07:12,466
>> And always being security concerned and efficiency concerned

126
00:07:12,483 --> 00:07:18,200
we want to sculpt appropriate service accounts for running the

127
00:07:18,283 --> 00:07:19,466
SQL Server product.

128
00:07:19,483 --> 00:07:24,466
>> All right. So let's get into that first topic, Installation Decisions.

129
00:07:24,483 --> 00:07:27,383
George, what do we need to know about installing the product?

130
00:07:27,466 --> 00:07:28,466
What are the critical points?

131
00:07:28,483 --> 00:07:31,466
>> Sure. Well, first off, we have a lot of decisions to make.

132
00:07:31,483 --> 00:07:35,333
There's quite a number of Wizard steps in installing the product.

133
00:07:35,416 --> 00:07:39,466
And it's not that it's hard, it's not hard, as a matter of fact

134
00:07:39,483 --> 00:07:43,466
could you, yeah, that's fine. It's not that it's hard to install

135
00:07:43,216 --> 00:07:45,466
the product, but you just have to know what decisions you have

136
00:07:45,483 --> 00:07:50,466
to make and there are a couple that are very hard to overcome

137
00:07:50,483 --> 00:07:54,333
if you don't make the decision right the first time around.

138
00:07:54,416 --> 00:07:59,350
And also, should you make certain decisions poorly you're going

139
00:07:59,433 --> 00:08:01,466
to have a poor foundation.

140
00:08:01,233 --> 00:08:04,466
>> So it's like the old Carpenter's Rule, measure twice, cut once.

141
00:08:04,483 --> 00:08:07,200
>> Exactly. All righty.

142
00:08:08,483 --> 00:08:10,316
So Installation Decisions.

143
00:08:10,483 --> 00:08:14,466
We'll take a look, yeah, yeah, yeah. We're good.

144
00:08:15,483 --> 00:08:19,466
Let's go on to Determine the Appropriate Hardware. Thank you.

145
00:08:19,483 --> 00:08:22,466
All right. So laying out some of the hardware decisions.

146
00:08:23,483 --> 00:08:26,166
Should we virtualize or not?

147
00:08:27,250 --> 00:08:30,216
>> Yeah. That's a question that has been going around with a lot

148
00:08:30,300 --> 00:08:34,466
of DBAs for a long time. Virtualization has always been viewed

149
00:08:34,483 --> 00:08:37,466
as not really a great choice for SQL Server, but the reality

150
00:08:37,483 --> 00:08:41,283
is that in the last several years virtualization's come a long

151
00:08:41,366 --> 00:08:46,283
way and it has really gotten to the point where virtualization vs.

152
00:08:46,366 --> 00:08:49,466
hard systems, very little difference. Is that what you see as

153
00:08:49,483 --> 00:08:50,466
well George?

154
00:08:50,483 --> 00:08:55,216
>> Yeah. Clearly the trend is towards a virtualization of SQL Server.

155
00:08:55,300 --> 00:08:57,466
Maybe not every single workload, you'll have to carefully consider

156
00:08:57,483 --> 00:09:02,466
that, but it used to be a crime or a sin. That's clearly not

157
00:09:02,483 --> 00:09:08,466
the case anymore. No. For CPU sockets and cores the balancing

158
00:09:08,483 --> 00:09:12,466
act with hardware in general is that you want to make sure the

159
00:09:12,483 --> 00:09:15,466
workload can be handled. Whatever workload SQL Server has to

160
00:09:15,483 --> 00:09:17,466
do you got to have the hardware to handle it, but I don't want

161
00:09:17,483 --> 00:09:19,433
to give away a lot of money away either.

162
00:09:19,450 --> 00:09:19,466
>> That's true.

163
00:09:19,483 --> 00:09:23,466
>> This, of course, is one of the reasons though that has been

164
00:09:23,483 --> 00:09:25,466
moving us in the direction of virtualization. We can use our

165
00:09:26,0 --> 00:09:27,466
hardware much better.

166
00:09:27,200 --> 00:09:27,466
>> Okay.

167
00:09:27,483 --> 00:09:32,466
>> Memory wise, a lot of times this is a function of the Windows

168
00:09:32,183 --> 00:09:35,466
Operating System, especially for the highest edition, so SQL

169
00:09:35,483 --> 00:09:40,466
Server's a memory loving project. It serves query code or answers

170
00:09:40,483 --> 00:09:44,466
queries out of memory, so the more memory, in general, the better.

171
00:09:44,483 --> 00:09:45,466
>> Good.

172
00:09:45,483 --> 00:09:48,350
>> Storage wise, you have questions there to.

173
00:09:48,433 --> 00:09:49,300
>> Absolutely.

174
00:09:49,383 --> 00:09:52,466
>> So for maybe a smaller shop you may have one SQL Server, a

175
00:09:52,483 --> 00:09:56,466
handful of SQL Servers, not going to be worthwhile to have a

176
00:09:56,483 --> 00:09:59,466
storage area network oriented storage. You'll have directed

177
00:09:59,483 --> 00:10:02,466
detached storage, and you'll have to manage that per server.

178
00:10:02,483 --> 00:10:07,466
But for a larger shop, 20, 50, 100 instances you're not going

179
00:10:07,483 --> 00:10:10,416
to manage storage server by server.

180
00:10:10,483 --> 00:10:13,466
>> No. You're going to have a block of disks that's available

181
00:10:13,483 --> 00:10:16,333
to everybody. So- >> Another

182
00:10:16,416 --> 00:10:20,466
trend we're seeing is the increasing use of solid state storage.

183
00:10:20,483 --> 00:10:23,466
I have a link here where you can take a look at maybe some of

184
00:10:23,483 --> 00:10:26,450
the places where that could apply, but it's something that needs

185
00:10:26,483 --> 00:10:29,466
to be put on the table especially for some of the heavier workloads.

186
00:10:29,483 --> 00:10:30,366
>> Absolutely.

187
00:10:30,450 --> 00:10:34,466
>> And Rich, you pointed out something yesterday while we were

188
00:10:34,183 --> 00:10:37,466
just chit chatting stuff about solid state storage.

189
00:10:37,200 --> 00:10:39,466
>> Yeah. One of the things that you do need to kind of be aware

190
00:10:39,483 --> 00:10:44,466
of with solid state storage is that it does have a life cycle.

191
00:10:45,483 --> 00:10:49,466
With all of the read write cycles that go on there is a tendency

192
00:10:49,483 --> 00:10:52,466
for it to wear out, so you do need to be aware that solid-state

193
00:10:52,483 --> 00:10:57,383
in the case of TempDB it's a trade-off. You can have some performance

194
00:10:57,466 --> 00:11:01,466
advantages from having the speed, but there are also some maintenance

195
00:11:01,483 --> 00:11:03,466
issues that you need to deal with to make sure that it doesn't

196
00:11:03,483 --> 00:11:08,200
run out and wear out while you're dealing with it. So that's

197
00:11:08,283 --> 00:11:10,466
really what's going on in that area right now.

198
00:11:10,483 --> 00:11:15,283
>> Great. For those that are going to have the very heaviest of

199
00:11:15,366 --> 00:11:19,416
workloads consider a couple of free tools that are unsupported,

200
00:11:19,483 --> 00:11:21,466
by the way, did I say free and unsupported?

201
00:11:21,483 --> 00:11:23,466
>> Yeah. They kind of go together sometimes.

202
00:11:23,483 --> 00:11:27,383
>> So you're on your own for those, but these, let's say you're

203
00:11:27,466 --> 00:11:30,466
considering a workload running on a particular hardware platform.

204
00:11:30,483 --> 00:11:34,466
Maybe you can persuade your vendor to drop something off for

205
00:11:34,183 --> 00:11:37,466
you to test. Without having to install SQL Server you can run

206
00:11:37,483 --> 00:11:41,466
these particular tools which simulate different kinds of IO patterns

207
00:11:41,483 --> 00:11:45,466
and can tell you if this particular platform is good for the

208
00:11:45,483 --> 00:11:46,466
job or not.

209
00:11:46,483 --> 00:11:51,466
>> Awesome. So what about the operating systems? I mean is there

210
00:11:51,483 --> 00:11:55,166
something that you have to deal with with OS selection in there?

211
00:11:55,250 --> 00:11:55,466
>> Oh yeah.

212
00:11:55,483 --> 00:11:56,433
>> Really?

213
00:11:56,450 --> 00:11:56,466
>> Oh, yeah.

214
00:11:56,483 --> 00:11:58,466
>> What might that be sir?

215
00:11:58,483 --> 00:12:00,466
>> Well, you have to make sure that you have the right Windows

216
00:12:00,483 --> 00:12:04,216
Operating System for the job as well. There are certain features

217
00:12:04,300 --> 00:12:07,466
that are operating system abound. From this slide I'd like to

218
00:12:07,483 --> 00:12:09,283
make a primary point.

219
00:12:09,483 --> 00:12:14,366
In general, whatever Windows Client you have or whatever Windows

220
00:12:14,450 --> 00:12:18,450
Server you have, one way or another you can get SQL Server on

221
00:12:18,483 --> 00:12:19,466
the machine.

222
00:12:19,166 --> 00:12:22,466
>> So it's really more of a matter of choosing the right OS for

223
00:12:22,483 --> 00:12:26,466
the situation that you're in rather than to support SQL Server.

224
00:12:26,483 --> 00:12:27,466
>> Yeah.

225
00:12:28,0 --> 00:12:29,333
>> That's good.

226
00:12:29,483 --> 00:12:32,466
>> All right. Now an innovation with SQL 2012, I don't know if

227
00:12:32,483 --> 00:12:35,466
this is considered earth shattering by the community or not,

228
00:12:35,483 --> 00:12:38,466
but Server Core has been around for a while now- >> Yeah.

229
00:12:38,483 --> 00:12:41,466
>> And SQL Server supports Windows Core.

230
00:12:41,483 --> 00:12:43,466
>> Awesome. That's great.

231
00:12:43,483 --> 00:12:45,466
>> Funny nickname for Windows Core.

232
00:12:45,483 --> 00:12:46,233
>> Uh-oh.

233
00:12:46,483 --> 00:12:48,466
>> Windows without Windows.

234
00:12:49,233 --> 00:12:51,466
>> Ooh, I like that.

235
00:12:51,483 --> 00:12:56,466
>> From a details standpoint I would not bother memorizing what

236
00:12:56,483 --> 00:13:02,466
the max memory, CPU sockets, what versions or editions of SQL

237
00:13:02,483 --> 00:13:05,466
go on what editions of Windows, don't bother with all that.

238
00:13:05,483 --> 00:13:08,466
>> So what you're saying is basically any hardware out there is

239
00:13:08,483 --> 00:13:12,466
going to have the ability to run SQL? It's just configuring for

240
00:13:12,483 --> 00:13:15,316
what the specific data loaded is.

241
00:13:15,400 --> 00:13:15,466
>> Exactly.

242
00:13:15,483 --> 00:13:16,466
>> Good.

243
00:13:16,483 --> 00:13:19,466
>> So let's take a look at selecting the appropriate edition of

244
00:13:19,483 --> 00:13:23,466
SQL which in my mind is a particularly important decision.

245
00:13:23,483 --> 00:13:25,466
>> All right.

246
00:13:25,183 --> 00:13:28,466
>> It basically goes like this. I'm either budgeted limited so

247
00:13:29,166 --> 00:13:33,466
I'm going to spend the money that I have or I'm feature driven

248
00:13:33,483 --> 00:13:38,433
and I have to get whatever edition has the features I absolutely need.

249
00:13:38,450 --> 00:13:38,466
>> Okay.

250
00:13:38,483 --> 00:13:41,466
>> What would be considered the cherry edition?

251
00:13:41,483 --> 00:13:42,466
>> The cherry edition, it's Enterprise.

252
00:13:43,450 --> 00:13:43,466
>> Well, no doubt.

253
00:13:43,483 --> 00:13:49,466
>> Any time you've got a full workload and you need to do everything,

254
00:13:49,483 --> 00:13:50,466
it's Enterprise.

255
00:13:50,483 --> 00:13:54,183
>> No doubt. So I have a link here for you to take a look at,

256
00:13:54,266 --> 00:13:58,466
an edition comparison, often I'll ask myself well wait a second,

257
00:13:58,483 --> 00:14:01,466
this minute feature, is that supported on this edition or that?

258
00:14:01,483 --> 00:14:04,466
I don't remember and I don't want to remember.

259
00:14:04,483 --> 00:14:05,466
>> No.

260
00:14:05,166 --> 00:14:06,466
>> So I have the link here.

261
00:14:07,483 --> 00:14:10,466
You'll see there are the principal editions, Enterprise, BI,

262
00:14:10,483 --> 00:14:14,350
and Standard, and if you want to download an edition to play

263
00:14:14,433 --> 00:14:17,466
with it's time-limited. Well, I have a link for you there.

264
00:14:17,483 --> 00:14:20,466
There's a specialized edition web and I want you to be aware

265
00:14:20,483 --> 00:14:25,200
of a couple of other editions that might serve you for a no-cost edition.

266
00:14:25,283 --> 00:14:26,466
>> Oh. That would be Express.

267
00:14:26,483 --> 00:14:30,466
>> Express Edition, and you know what, it used to be that the

268
00:14:30,483 --> 00:14:35,466
predecessor for Express was fairly minimally capable.

269
00:14:36,333 --> 00:14:41,233
Express can actually do a lot. One CPU, a gig of RAM, but you

270
00:14:41,316 --> 00:14:44,466
can have a 10 gig database. Comes with GUI tools, can have reporting

271
00:14:44,483 --> 00:14:46,466
services, a lot of goodness Rich.

272
00:14:46,483 --> 00:14:50,466
>> Okay. But do I have to go out and get a full license if I'm

273
00:14:50,483 --> 00:14:53,466
working on developing something and I'm not ready to roll it

274
00:14:53,483 --> 00:14:56,466
out or something like that? Is there an alternative I can use there?

275
00:14:56,233 --> 00:15:00,466
>> In fact there is. I have linked here a link to the Microsoft

276
00:15:00,483 --> 00:15:04,216
Store where you can get Developer Edition, 60 bucks.

277
00:15:04,300 --> 00:15:04,466
>> Okay.

278
00:15:04,483 --> 00:15:10,466
>> 60 bucks. A few pennies under 60 bucks, but absolutely Enterprise

279
00:15:10,483 --> 00:15:13,466
Edition, feature full, one legal restriction Rich.

280
00:15:13,483 --> 00:15:14,466
>> What's that?

281
00:15:14,483 --> 00:15:19,216
>> Of course there's a legal restriction. You can only have developer connections.

282
00:15:20,483 --> 00:15:22,466
>> So no production on that one.

283
00:15:23,350 --> 00:15:27,466
Very cool. So what are these instances all about George?

284
00:15:27,483 --> 00:15:34,466
>> Sure. When I am installing SQL Server I must make a decision

285
00:15:34,233 --> 00:15:37,466
at the Wizard step that you see here in the screenshot- >> Okay.

286
00:15:37,483 --> 00:15:41,466
>> And that is, do I want to have a default instance or do I want

287
00:15:41,483 --> 00:15:43,466
to have a named instance? So there are two aspects here.

288
00:15:43,483 --> 00:15:48,250
First, naming and connecting, but the bigger picture here is

289
00:15:48,333 --> 00:15:51,433
that I can have more than one instance on a machine.

290
00:15:51,483 --> 00:15:55,466
Picture, Rich, that each one has an electric fence around the instance.

291
00:15:55,483 --> 00:15:56,466
>> So like a boundary.

292
00:15:56,483 --> 00:15:59,466
>> Yeah. It's exactly a boundary. So I would have a different

293
00:15:59,483 --> 00:16:04,466
essay, a different a system administrator for each instance- >> Okay.

294
00:16:05,483 --> 00:16:09,416
>> Have a different system administrator, I could have different

295
00:16:09,483 --> 00:16:13,316
security assignments, I can have different service level agreements,

296
00:16:13,400 --> 00:16:16,466
different collations. I've listed a bunch of the reasons on the

297
00:16:16,483 --> 00:16:20,466
slide here why I might want to have a separate instance.

298
00:16:21,483 --> 00:16:27,466
>> So it's more about being able to control how that instance

299
00:16:27,483 --> 00:16:32,450
is operating without having to affect other installs that are

300
00:16:32,483 --> 00:16:33,466
being used for other purposes.

301
00:16:33,483 --> 00:16:35,433
>> Precisely, precisely.

302
00:16:35,450 --> 00:16:35,466
>> Cool.

303
00:16:36,483 --> 00:16:39,466
>> Curious, just a curious fact. Now this isn't important for

304
00:16:39,483 --> 00:16:44,466
the test just curious, every single edition of SQL Server supports

305
00:16:44,483 --> 00:16:46,466
up to 50 instances.

306
00:16:46,483 --> 00:16:49,466
>> That's a lot. I think that's more than most people are probably

307
00:16:49,483 --> 00:16:51,466
going to ever put on a single machine.

308
00:16:51,483 --> 00:16:54,466
>> Yeah. No, you and I both have teenagers, so we know you just

309
00:16:54,483 --> 00:16:58,466
because you can doesn't mean you should.

310
00:16:58,483 --> 00:17:00,166
>> I like that. Yeah.

311
00:17:00,483 --> 00:17:04,466
>> So one of the things that goes into instances are collations.

312
00:17:04,483 --> 00:17:06,216
Can you talk a little bit about that?

313
00:17:06,300 --> 00:17:10,466
>> Sure. I have one little follow-up thing on instances; and my

314
00:17:10,483 --> 00:17:15,466
reigning heavyweight of those instances or those circumstances

315
00:17:16,483 --> 00:17:19,466
out in the world that I'm aware of, one of my customers or one

316
00:17:19,183 --> 00:17:24,466
of our students, 19 instances in production on one operating system.

317
00:17:24,483 --> 00:17:26,300
>> That's pushing it.

318
00:17:26,383 --> 00:17:28,466
>> That seems like that's pushing it to me too.

319
00:17:28,483 --> 00:17:29,466
>> Absolutely.

320
00:17:29,483 --> 00:17:32,466
>> Okay. Collations. So let me start off with the definition.

321
00:17:32,483 --> 00:17:33,466
>> Okay.

322
00:17:33,483 --> 00:17:39,466
>> So a collation is a rulebook of text based sorting in comparison

323
00:17:40,483 --> 00:17:46,466
rules, and part of the relevance here is that I must pick a collation.

324
00:17:46,483 --> 00:17:51,183
Now as we were discussing, one thing that's good during installation,

325
00:17:51,483 --> 00:17:54,466
the SQL Server Installation will look at the language of your

326
00:17:54,483 --> 00:17:58,466
underlying operating system and at least grab you by the nose

327
00:17:58,483 --> 00:18:02,283
and make a strong suggestion as to what you should pick.

328
00:18:02,366 --> 00:18:02,466
>> Okay.

329
00:18:02,483 --> 00:18:05,466
>> There are still two major decisions, as you can see from the

330
00:18:05,483 --> 00:18:10,466
screenshot here, whether I use a Legacy SQL Collation or a Windows Collation.

331
00:18:10,483 --> 00:18:16,466
Strangely, a SQL Collation is the default but Windows Collations

332
00:18:16,483 --> 00:18:17,466
are suggested.

333
00:18:17,483 --> 00:18:23,333
>> So you can use the Legacy or you can use the current ones defined

334
00:18:23,416 --> 00:18:23,466
in Windows.

335
00:18:23,483 --> 00:18:24,466
>> Absolutely.

336
00:18:24,483 --> 00:18:27,466
>> Good. So can you show us a little bit about that George?

337
00:18:27,483 --> 00:18:29,466
Let's go over and take a look maybe.

338
00:18:29,483 --> 00:18:33,466
>> I would. So first thing up we know that you have to make a

339
00:18:33,483 --> 00:18:37,0
collation decision. And I want to come up with the corny phrase

340
00:18:37,483 --> 00:18:39,433
to help everybody grasp something.

341
00:18:39,450 --> 00:18:39,466
>> Okay.

342
00:18:39,483 --> 00:18:43,266
>> And the corny phrase is like begets like.

343
00:18:43,350 --> 00:18:44,200
>> Okay.

344
00:18:44,283 --> 00:18:49,466
>> So we'll find then, let me flip over to my demonstration environments-

345
00:18:49,483 --> 00:18:50,466
>> All righty.

346
00:18:50,483 --> 00:18:51,466
>> All right.

347
00:18:52,483 --> 00:18:57,466
When I installed my instance I stepped in a bear trap.

348
00:18:57,483 --> 00:18:58,466
>> Okay.

349
00:18:58,483 --> 00:19:01,466
>> A collation was set at the instance and I'm able to look at

350
00:19:02,483 --> 00:19:04,466
this both in the graphical user interface- >> All

351
00:19:04,483 --> 00:19:05,466
right.

352
00:19:06,483 --> 00:19:09,466
>> And also in code if I want to.

353
00:19:09,166 --> 00:19:09,466
>> Okay.

354
00:19:09,483 --> 00:19:15,466
>> Now one of the impacts of this is that my TempDB database is

355
00:19:15,483 --> 00:19:19,466
going to have the same collation as Dad, so to say. And that

356
00:19:19,483 --> 00:19:23,466
is not configurable. One other curious thing, I'd like to point

357
00:19:23,483 --> 00:19:26,466
out some of them naming conventions just real quick. Notice that

358
00:19:27,333 --> 00:19:31,466
this says it has a SQL Collation that's a prefix, as opposed

359
00:19:31,483 --> 00:19:35,466
to Windows Collation, and without getting too gory we see a couple

360
00:19:35,483 --> 00:19:41,466
other sensitivities here. We see case insensitive and accent sensitive.

361
00:19:41,483 --> 00:19:46,466
>> So this CI is Case Insensitive, the AS means Accent Sensitive.

362
00:19:46,483 --> 00:19:49,466
>> No. Do you have memorized list of all the other sensitivities?

363
00:19:49,483 --> 00:19:50,466
>> No.

364
00:19:50,483 --> 00:19:54,466
>> I don't either. But I remember the I and the S for insensitive

365
00:19:54,483 --> 00:19:57,166
and sensitive. That's about as far as my memory goes.

366
00:19:57,483 --> 00:19:58,183
>> Yeah, same here.

367
00:19:58,266 --> 00:19:58,466
>> All right.

368
00:19:58,483 --> 00:20:02,466
>> Let's say now I create a new database with the Graphical User

369
00:20:02,483 --> 00:20:07,466
Interface; I of course have to refresh so I did not, as you see

370
00:20:07,483 --> 00:20:10,466
in code, specify a particular collation.

371
00:20:10,483 --> 00:20:12,383
>> So it assigned one for you?

372
00:20:12,466 --> 00:20:14,383
>> So guess what happened?

373
00:20:16,166 --> 00:20:17,383
Like begets like.

374
00:20:17,450 --> 00:20:17,466
>> Okay.

375
00:20:17,483 --> 00:20:20,433
>> It's going to have the same collation as Dad.

376
00:20:20,450 --> 00:20:20,466
>> All righty.

377
00:20:20,483 --> 00:20:24,266
>> And in fact, just so everybody gets to see this, if I wanted

378
00:20:24,350 --> 00:20:27,283
to see this in code well I have a function that I could use,

379
00:20:27,366 --> 00:20:31,283
point to a particular database and use a function that will return

380
00:20:31,483 --> 00:20:33,466
the particular collation of the

381
00:20:35,366 --> 00:20:38,466
database that I am currently pointed to.

382
00:20:38,483 --> 00:20:39,466
>> Okay.

383
00:20:39,483 --> 00:20:45,466
>> All right. Next up, do observe that when I create a database

384
00:20:45,483 --> 00:20:49,466
I can specify and override collation. Are your kids just like you?

385
00:20:50,483 --> 00:20:51,466
>> I hope not.

386
00:20:52,0 --> 00:20:53,466
>> No, my kids are not just like me.

387
00:20:55,483 --> 00:21:00,466
And refreshing my list of databases I go to my multi-lingual

388
00:21:01,483 --> 00:21:04,233
speak DB and now, of course, I see

389
00:21:05,483 --> 00:21:07,466
these specified collation.

390
00:21:07,483 --> 00:21:10,466
>> Awesome. So you can change the collation for an individual

391
00:21:10,483 --> 00:21:12,466
database if you need it.

392
00:21:13,416 --> 00:21:16,466
Can you, do have finer grain control even?

393
00:21:16,483 --> 00:21:20,466
>> In fact, I do have finer grain control, and with the code seen

394
00:21:20,483 --> 00:21:28,466
here you'll observe that on a text column by column basis I can

395
00:21:28,483 --> 00:21:34,466
specify the collate clause that will then dictate how text based

396
00:21:34,483 --> 00:21:37,466
comparisons and sorting will work for that particular column.

397
00:21:38,300 --> 00:21:38,316
>> Awesome.

398
00:21:38,400 --> 00:21:41,466
>> So following a trail we now know we have instance collation,

399
00:21:41,483 --> 00:21:46,216
we have database collation, and text based collation.

400
00:21:46,300 --> 00:21:46,466
>> Okay.

401
00:21:46,483 --> 00:21:50,466
>> To drill down real quick I'll go to Tables, I see this particular

402
00:21:50,483 --> 00:21:55,283
table, I see a column, let's pick one of these, I'll go to Properties,

403
00:21:55,366 --> 00:21:56,466
and what do we see?

404
00:21:58,283 --> 00:21:58,466
>> Yep.

405
00:21:58,483 --> 00:22:01,466
>> We see an override collation.

406
00:22:01,483 --> 00:22:02,466
>> Awesome.

407
00:22:02,483 --> 00:22:04,466
>> And Rich, you know it goes deeper than that.

408
00:22:05,483 --> 00:22:08,466
>> Sure. Sure it does because you can actually specify it

409
00:22:10,483 --> 00:22:11,466
>> Down to the query level.

410
00:22:11,483 --> 00:22:12,433
>> Awesome.

411
00:22:12,483 --> 00:22:14,466
>> So that's what we're going to take a look at next. I'm going

412
00:22:14,483 --> 00:22:15,466
to create a table,

413
00:22:17,483 --> 00:22:22,466
and if you observe carefully, once again I'm using per text column

414
00:22:22,483 --> 00:22:24,466
collations- >> Shh.

415
00:22:24,483 --> 00:22:28,466
>> One being case insensitive and accent sensitive and the other

416
00:22:28,483 --> 00:22:30,466
being sensitive to both.

417
00:22:30,483 --> 00:22:33,466
>> Okay. So two different collations, two different columns.

418
00:22:33,483 --> 00:22:38,466
>> That's right. So notice I'm inserting mixed case data into

419
00:22:38,483 --> 00:22:40,433
both of these which I'll take care of- >> All

420
00:22:40,450 --> 00:22:40,466
right.

421
00:22:40,483 --> 00:22:46,466
>> And now querying the case insensitive data column I'm now going

422
00:22:46,483 --> 00:22:52,466
to query using text data that it did not match what was inserted.

423
00:22:52,166 --> 00:22:54,466
>> Capitals in one, lower case in the other.

424
00:22:54,483 --> 00:22:58,466
>> That's right. But now when I query that I actually have a row

425
00:22:58,483 --> 00:23:02,433
returned because it is a case insensitive collation.

426
00:23:02,450 --> 00:23:02,466
>> Awesome.

427
00:23:02,483 --> 00:23:06,266
>> Let's see where this goes now when I query the case sensitive

428
00:23:06,350 --> 00:23:10,466
data column with all lowercase data. You can probably figure

429
00:23:10,483 --> 00:23:12,466
out the end of this movie and- >> Ah,

430
00:23:12,483 --> 00:23:15,383
yeah. Nothing comes back. No match is found.

431
00:23:15,466 --> 00:23:16,466
>> All right. Drum roll please.

432
00:23:18,483 --> 00:23:19,466
So now we see

433
00:23:21,200 --> 00:23:26,466
that I can actually override collation behavior on a per query

434
00:23:26,483 --> 00:23:31,466
basis once again using the collate clause. So I'm querying for

435
00:23:31,483 --> 00:23:35,466
the presence of all lowercase data against the case sensitive

436
00:23:35,483 --> 00:23:40,466
data column but I overrode that with a case insensitive collation.

437
00:23:40,483 --> 00:23:42,200
>> A very cool.

438
00:23:42,283 --> 00:23:44,466
>> Okay. There are a couple other things in here we can take a

439
00:23:44,216 --> 00:23:46,266
look at, but that's good for now.

440
00:23:46,350 --> 00:23:52,433
>> All right. So overall, basically there are some things that

441
00:23:52,450 --> 00:23:52,466
you can

442
00:23:54,316 --> 00:23:57,466
choose, there are some things that you can't choose, there are

443
00:23:57,483 --> 00:24:00,433
other things that you can change if you choose them wrong.

444
00:24:00,450 --> 00:24:00,466
>> That's right.

445
00:24:00,483 --> 00:24:03,466
>> So installations about trying to get it right the first time

446
00:24:04,0 --> 00:24:07,466
but not being absolutely locked in on everything.

447
00:24:07,483 --> 00:24:12,466
>> That's right. So certainly with collation we have some liberty after-the-fact.

448
00:24:12,483 --> 00:24:17,416
>> Yep. Awesome. All right. So then one of the things that we

449
00:24:17,483 --> 00:24:21,466
need to take care of also is ensuring that we have all of the

450
00:24:21,483 --> 00:24:24,466
storage set up, that we've got somewhere to put our data.

451
00:24:25,483 --> 00:24:27,466
Can we talk a little bit more about that?

452
00:24:27,483 --> 00:24:28,466
>> Let's do that.

453
00:24:29,183 --> 00:24:33,466
Good news is more than ever before in SQL Server you can set

454
00:24:33,483 --> 00:24:36,466
a lot of default locations, as you can see from the screenshot

455
00:24:36,483 --> 00:24:41,400
here, and that doesn't mean you can't place files in locations

456
00:24:41,483 --> 00:24:44,466
outside of these, but they are just that they set default so

457
00:24:44,483 --> 00:24:49,466
if I backup data, if I create a new database, I can specify a

458
00:24:49,200 --> 00:24:51,466
data and a log file location, things like that.

459
00:24:51,483 --> 00:24:52,200
>> Okay.

460
00:24:52,283 --> 00:24:55,466
>> So in this topic we'll take a look at a general file system

461
00:24:55,483 --> 00:24:59,466
design principles, we'll also take a look at some advanced database

462
00:24:59,483 --> 00:25:05,283
design and the circumstances that may encourage that and some

463
00:25:05,366 --> 00:25:07,466
of the building blocks that go into that.

464
00:25:07,483 --> 00:25:09,466
>> All right. So what's the first thing that we really need to

465
00:25:09,483 --> 00:25:10,466
think about?

466
00:25:11,483 --> 00:25:13,466
>> Principal number one, Spreading.

467
00:25:14,483 --> 00:25:15,266
>> Spreading.

468
00:25:15,350 --> 00:25:16,216
>> Spreading.

469
00:25:16,300 --> 00:25:18,466
>> Don't put all your apples in one basket?

470
00:25:18,483 --> 00:25:19,433
>> Something like that.

471
00:25:19,450 --> 00:25:19,466
>> All right.

472
00:25:19,483 --> 00:25:23,466
>> So let's take a look at a typical Windows Server, SQL Server.

473
00:25:23,483 --> 00:25:28,466
It's going to have Windows IO activity, we'll have the data file

474
00:25:28,483 --> 00:25:33,466
IO activity which is a random and also involves reads and writes.

475
00:25:33,483 --> 00:25:34,466
>> Okay.

476
00:25:34,183 --> 00:25:38,166
>> And then finally we have logged file activity which is sequential

477
00:25:38,483 --> 00:25:40,433
and write oriented.

478
00:25:40,450 --> 00:25:40,466
>> Okay.

479
00:25:41,483 --> 00:25:45,466
>> One of the biggest IO taxes is moving that IO head so we don't

480
00:25:45,483 --> 00:25:49,183
want to move the IO head, in particular, on the log file.

481
00:25:49,266 --> 00:25:52,466
And also in the log file I don't want to have the overhead of

482
00:25:52,483 --> 00:25:53,466
RAID parody.

483
00:25:54,450 --> 00:25:54,466
>> Okay.

484
00:25:54,483 --> 00:25:59,416
>> So I have here in a diagram a few different file system design

485
00:25:59,483 --> 00:26:04,366
suggestions starting off with a lab machine which is a fictitious.

486
00:26:04,450 --> 00:26:07,433
I have everything of importance on one a drive letter.

487
00:26:07,450 --> 00:26:07,466
>> Okay.

488
00:26:07,483 --> 00:26:10,400
>> Again, just because I can- >> Doesn't

489
00:26:10,483 --> 00:26:11,466
mean you should. Absolutely.

490
00:26:12,483 --> 00:26:16,466
>> So then I have a progression of maybe a small, very low workload

491
00:26:16,483 --> 00:26:20,466
server up to something that's much more industrial strength.

492
00:26:21,483 --> 00:26:25,466
>> So what is the most important thing you need to keep in mind

493
00:26:25,483 --> 00:26:28,466
when we are talking about setting up these drives?

494
00:26:29,483 --> 00:26:34,466
Is there something to worry about as far as keeping data and

495
00:26:35,333 --> 00:26:38,466
log files a separate or TempDB separate? What are the things

496
00:26:38,483 --> 00:26:40,166
that you need to think about?

497
00:26:40,250 --> 00:26:44,283
>> Like we see on the slide there, you want to separate log files

498
00:26:44,366 --> 00:26:49,466
and data file activities. So that's clearly, especially for a

499
00:26:49,483 --> 00:26:53,466
heavy workload, one of the most important design considerations.

500
00:26:53,450 --> 00:26:53,466
>> Cool.

501
00:26:53,483 --> 00:26:56,466
>> You're still going to have to come up with RAID levels for

502
00:26:56,483 --> 00:26:59,466
each of the storage units that you allocate. You have a lot

503
00:26:59,483 --> 00:27:00,466
of choices.

504
00:27:01,216 --> 00:27:05,466
And some of you are hardware savvy, others may be coming along

505
00:27:05,483 --> 00:27:09,466
learning your hardware; I have a link here to, well it calls

506
00:27:09,483 --> 00:27:10,466
itself RAID.edu.

507
00:27:12,216 --> 00:27:16,166
So if you want to learn the difference between RAID 10, RAID

508
00:27:16,483 --> 00:27:20,466
0 plus 1, RAID 6, RAID 5, etc., etc., there's some nice little

509
00:27:20,483 --> 00:27:23,466
multimedia graphics. I like to give that out to my students.

510
00:27:23,483 --> 00:27:27,466
>> Cool. What about separation of data files themselves?

511
00:27:27,483 --> 00:27:29,466
Anything that we need to think about there?

512
00:27:30,450 --> 00:27:30,466
>> In fact, yes.

513
00:27:32,483 --> 00:27:37,466
Looking at a more advanced database design we'll see that this

514
00:27:37,483 --> 00:27:42,466
will involve multiple file groups which are supported by at least

515
00:27:42,483 --> 00:27:45,466
one file, possibly multiple files.

516
00:27:45,483 --> 00:27:46,333
>> Okay.

517
00:27:46,483 --> 00:27:49,316
>> And as you can see from the diagram here part of the point

518
00:27:49,400 --> 00:27:54,466
is positioning space occupying objects over different file groups.

519
00:27:54,483 --> 00:27:55,466
>> Okay.

520
00:27:55,483 --> 00:27:59,466
>> So using the principle of Spreading I now can spread out the

521
00:27:59,483 --> 00:28:05,416
IO in querying activity ind the maintenance activity over multiple

522
00:28:05,483 --> 00:28:07,466
read write heads. I have a general rule though.

523
00:28:07,483 --> 00:28:08,466
>> What would that be?

524
00:28:08,483 --> 00:28:13,466
>> General rule is for every single file that I'm going to add

525
00:28:13,483 --> 00:28:16,216
to a database better be on its own drive letter.

526
00:28:16,300 --> 00:28:19,466
>> Yeah. That kind of makes sense because otherwise what's the

527
00:28:19,483 --> 00:28:21,466
sense in having multiple files?

528
00:28:21,483 --> 00:28:24,466
>> I'm going to have the same read write heads fighting for the

529
00:28:24,483 --> 00:28:26,466
same data file activity.

530
00:28:26,483 --> 00:28:27,250
>> Yep.

531
00:28:27,333 --> 00:28:30,466
>> Now even though my diagram shows multiple log files it's only

532
00:28:30,483 --> 00:28:34,466
so that you know you can, this is not a recommended procedure,

533
00:28:35,483 --> 00:28:38,316
it's only going to be used if the first one fills up.

534
00:28:38,400 --> 00:28:41,466
>> The only time I've ever really seen that used is to migrate

535
00:28:41,483 --> 00:28:45,466
from a transaction log from one drive to another is really what

536
00:28:45,483 --> 00:28:46,466
that helps out with.

537
00:28:46,483 --> 00:28:50,466
>> Yeah. Now I want to spy, before I go to the next slide, I went

538
00:28:50,483 --> 00:28:55,466
to spy into one particular circumstance. Notice that I could

539
00:28:55,483 --> 00:28:58,466
have let's say a table in one file group and a non-clustered

540
00:28:58,483 --> 00:29:02,466
index in another file group, but observe the top of the diagram

541
00:29:02,483 --> 00:29:07,333
where I could actually have one single table spread out over

542
00:29:07,416 --> 00:29:08,466
multiple file groups.

543
00:29:08,483 --> 00:29:10,283
>> Multiple file groups?

544
00:29:10,366 --> 00:29:13,466
>> Multiple file groups. Now the reason that I'm going to go to

545
00:29:13,233 --> 00:29:16,433
this design to begin with would be twofold.

546
00:29:16,450 --> 00:29:16,466
>> Okay.

547
00:29:16,483 --> 00:29:20,466
>> Performance, meaning more read write heads involved in reading

548
00:29:20,483 --> 00:29:23,466
and writing, that part I already brought up, but maintenance

549
00:29:23,483 --> 00:29:27,466
I've smaller units of maintenance that can be done over, well,

550
00:29:27,483 --> 00:29:28,466
smaller units.

551
00:29:28,483 --> 00:29:33,433
>> Awesome. So is there anything else that you would use multiple

552
00:29:33,483 --> 00:29:35,200
file groups for George?

553
00:29:35,283 --> 00:29:39,466
>> I can back up one file or one file group at a time as well.

554
00:29:39,483 --> 00:29:41,250
>> Okay. Cool.

555
00:29:42,466 --> 00:29:43,466
>> Yeah. So let's say I had a

556
00:29:46,483 --> 00:29:50,466
multi-terabyte database. I might want to back that up in pieces,

557
00:29:50,483 --> 00:29:54,466
maybe one file per day, one file group per day, I'll tell you

558
00:29:54,166 --> 00:29:58,466
from experience though if you go to that more advanced design

559
00:29:58,483 --> 00:30:02,433
you a better model your Disaster Recovery.

560
00:30:02,450 --> 00:30:02,466
>> Oh, yeah.

561
00:30:03,333 --> 00:30:06,383
>> You'd want to have a military drill where you really know how

562
00:30:06,466 --> 00:30:07,250
to do this.

563
00:30:07,483 --> 00:30:08,466
>> Yep.

564
00:30:08,483 --> 00:30:12,283
>> Just deviating from the plan here a little bit, I find that

565
00:30:12,366 --> 00:30:15,333
every time there's a disaster situation there's always some X

566
00:30:15,416 --> 00:30:18,466
factor, something that wasn't accounted for, something that changed,

567
00:30:19,483 --> 00:30:23,466
and it's tough enough to get it right or tough enough of a situation

568
00:30:24,483 --> 00:30:29,466
by the time you start adding X factors plus other problems, you

569
00:30:29,483 --> 00:30:30,466
just want to avoid that.

570
00:30:30,483 --> 00:30:34,466
>> And by the way, we are going to be talking a lot more about

571
00:30:34,200 --> 00:30:37,466
that later on today in a module coming up. That would be the

572
00:30:37,483 --> 00:30:41,466
one on Managing Data, so stay tuned for that as well.

573
00:30:41,483 --> 00:30:44,366
George, are file groups use at all in partitioning?

574
00:30:44,450 --> 00:30:49,466
>> They are. And in fact, we'll see from the diagram here, not

575
00:30:49,483 --> 00:30:53,466
to go into too much detail, but this shows the primary building

576
00:30:53,483 --> 00:30:58,300
blocks that are involved in creating a table that's divided among

577
00:30:58,383 --> 00:31:01,466
file groups. So I have to have file groups, we see that in green,

578
00:31:01,483 --> 00:31:05,466
and then I have to have a partition function, partition scheme,

579
00:31:05,483 --> 00:31:10,466
finally I make a table that then leans on all the other dependencies.

580
00:31:10,483 --> 00:31:14,466
So again, the purpose is to spread, maybe I have one partition

581
00:31:14,483 --> 00:31:18,466
with many gigs of archive data, I'm not going to load data into

582
00:31:18,483 --> 00:31:22,466
that partition, I'm not going to change the data in the partition,

583
00:31:22,483 --> 00:31:25,466
so I can have that on, maybe I don't even back that up is quite

584
00:31:25,483 --> 00:31:29,466
as regularly, and then I have another partition. Maybe that's

585
00:31:29,483 --> 00:31:32,283
where I load my regular data into.

586
00:31:32,366 --> 00:31:32,466
>> Awesome.

587
00:31:32,483 --> 00:31:35,466
>> I can also have Index Maintenance performed on a partition

588
00:31:35,483 --> 00:31:42,466
by partition basis. So for particularly large tables this would

589
00:31:42,483 --> 00:31:46,466
be a design idea. Now I have a couple of links down there, which

590
00:31:46,166 --> 00:31:51,383
for those that are interested in finding out more, very practically

591
00:31:51,483 --> 00:31:56,466
applied code and examples of how to load data into a current

592
00:31:56,483 --> 00:32:00,466
partition, fold that into an existing partition, make a new one

593
00:32:00,483 --> 00:32:03,466
for the next load cycle, and I think you'll find that interesting.

594
00:32:03,483 --> 00:32:09,466
>> Super. So have you got something to show us now on doing some designs?

595
00:32:09,483 --> 00:32:10,466
>> I do.

596
00:32:10,483 --> 00:32:12,466
>> And some creation here?

597
00:32:12,483 --> 00:32:17,466
>> Sure. We'll take a look at first at creating a database with

598
00:32:17,483 --> 00:32:21,233
an advanced design using the Graphical User Interface.

599
00:32:21,316 --> 00:32:28,466
Now the first thing that we'll observe is that we can create

600
00:32:28,483 --> 00:32:30,466
containers of files.

601
00:32:31,483 --> 00:32:34,466
Let's say we have an archive file group.

602
00:32:35,483 --> 00:32:38,466
>> So the containers are the file groups, right?

603
00:32:40,483 --> 00:32:45,216
>> The containers of objects or those that hold objects are file groups.

604
00:32:47,483 --> 00:32:50,466
So I can make a couple of file groups, go back to my General

605
00:32:50,483 --> 00:32:54,466
tab, and now I can add one or more files

606
00:32:56,483 --> 00:33:00,466
and add them to our particular file group. Now just for typing

607
00:33:00,483 --> 00:33:03,466
simplicity and that I'm going to give fairly

608
00:33:05,0 --> 00:33:06,466
non-descriptive names.

609
00:33:06,483 --> 00:33:10,466
>> Normally you would want to name it something that applies to,

610
00:33:10,483 --> 00:33:12,466
that has meaning to you.

611
00:33:12,483 --> 00:33:15,466
>> Good suggestion. So thanks for letting me off the hook here Rich.

612
00:33:15,483 --> 00:33:18,466
>> That's all right. We'll let you get away from it this time.

613
00:33:18,483 --> 00:33:21,466
And it also helps if you name in the database to, huh?

614
00:33:21,483 --> 00:33:23,416
>> Oh, yeah. Wouldn't that help.

615
00:33:24,266 --> 00:33:24,466
Nancy DB.

616
00:33:25,0 --> 00:33:26,466
>> There we go.

617
00:33:26,483 --> 00:33:29,466
>> Now we are good. Okay. So this is for row data.

618
00:33:31,483 --> 00:33:36,466
I already know from this point on

619
00:33:44,483 --> 00:33:46,466
this is where I could now create objects. In fact, let me go

620
00:33:46,483 --> 00:33:47,466
over here.

621
00:33:49,483 --> 00:33:53,466
>> So the objects are specified to a particular file group when

622
00:33:53,483 --> 00:33:54,466
they are created?

623
00:33:54,483 --> 00:33:58,450
>> Exactly. This is exactly where I'm headed.

624
00:33:59,483 --> 00:34:03,466
Now we'll find in just a moment,

625
00:34:05,483 --> 00:34:07,466
in fact that's exactly what I'm going to show. Now for this

626
00:34:07,483 --> 00:34:12,466
next part I want to simulate a more advanced database design,

627
00:34:12,483 --> 00:34:16,466
but to do so I have to make or stimulate the creation of lots

628
00:34:16,483 --> 00:34:18,333
of drive letters.

629
00:34:18,466 --> 00:34:20,466
>> We don't have lots of disk drives, so you're going to create

630
00:34:20,483 --> 00:34:23,466
directories the just simulate their existence.

631
00:34:23,483 --> 00:34:25,466
>> Yeah. So I just have a virtual machine- >> Perfect.

632
00:34:25,483 --> 00:34:28,283
>> I don't want to make all the storage for all that. That's fine.

633
00:34:28,366 --> 00:34:33,466
So next up you'll observe as I scroll through this I have multiple

634
00:34:33,483 --> 00:34:38,350
data files, multiple file groups in those files, and only to

635
00:34:38,433 --> 00:34:43,466
be crazy, not to show necessarily good design, notice every file

636
00:34:43,483 --> 00:34:48,466
can have an individual initial size, max size, growth, all of that.

637
00:34:49,0 --> 00:34:49,466
>> Cool.

638
00:34:49,483 --> 00:34:51,466
>> So let me finish creating this

639
00:34:55,483 --> 00:35:02,466
and refreshing there is now my advanced design database.

640
00:35:03,166 --> 00:35:03,283
>> Awesome.

641
00:35:03,366 --> 00:35:06,466
>> And if I go to Properties, we'll go to File Groups, notice

642
00:35:06,483 --> 00:35:09,466
multiple file groups. If I go to Files,

643
00:35:11,350 --> 00:35:14,466
all beautiful naming conventions- >> At

644
00:35:14,483 --> 00:35:16,233
least naming conventions.

645
00:35:17,483 --> 00:35:18,466
Awesome.

646
00:35:20,250 --> 00:35:22,466
>> Now to finish the drama of the story,

647
00:35:24,233 --> 00:35:28,466
notice I can create, actually I have to go back for just a second,

648
00:35:30,166 --> 00:35:34,466
one confusion that I think people often have is confusing the

649
00:35:34,483 --> 00:35:38,466
Default File Group vs. the Primary. And you're good about pointing

650
00:35:38,483 --> 00:35:42,466
out Rich that the Primary File Group holds system objects, system

651
00:35:42,483 --> 00:35:47,466
tables, the recordkeeping of the database and such; and when

652
00:35:47,200 --> 00:35:50,466
I only have one File Group, the Primary, well guess which one's

653
00:35:51,166 --> 00:35:51,466
the Default?

654
00:35:51,483 --> 00:35:53,466
>> That's pretty easy. It'd be Primary.

655
00:35:53,483 --> 00:35:54,466
>> Exactly.

656
00:35:54,483 --> 00:35:57,466
>> So what if you don't want prime, everything going into Primary though?

657
00:35:57,483 --> 00:36:01,466
>> Yeah. A general design rule of thumb is that if I'm going to

658
00:36:01,483 --> 00:36:05,466
have even a one file group beyond the Primary then set that one

659
00:36:05,483 --> 00:36:08,433
as the Default File Group. But I have an object lesson here.

660
00:36:08,450 --> 00:36:08,466
>> Uh-oh.

661
00:36:08,483 --> 00:36:09,466
>> Let's take a look.

662
00:36:10,483 --> 00:36:14,283
You know me and my object lessons. So I'm now going to execute

663
00:36:14,366 --> 00:36:19,266
a table creation here, and we're going to play investigator and

664
00:36:19,350 --> 00:36:21,433
find out where it might exist.

665
00:36:21,450 --> 00:36:21,466
>> Okay.

666
00:36:21,483 --> 00:36:23,466
>> So I'll get properties

667
00:36:26,316 --> 00:36:30,466
on this and I go to Storage and observe the file group that it

668
00:36:30,483 --> 00:36:34,466
went on is the Default File Group.

669
00:36:34,483 --> 00:36:35,416
>> Okay.

670
00:36:35,483 --> 00:36:40,466
>> This time around I'm going to designate the particular file

671
00:36:40,483 --> 00:36:44,466
group that it goes on, and I have a rule of thumb I tell my students

672
00:36:45,166 --> 00:36:49,466
often, SQL Server doesn't do what you want it to do, it does

673
00:36:49,483 --> 00:36:50,466
what you tell it to do.

674
00:36:50,483 --> 00:36:51,166
>> Okay.

675
00:36:51,250 --> 00:36:53,316
>> And if I told it to go on a

676
00:36:54,483 --> 00:36:57,466
particular file group, well guess what?

677
00:36:57,483 --> 00:36:58,466
>> It went there.

678
00:36:58,483 --> 00:37:00,433
>> It did exactly that. So there we go.

679
00:37:00,450 --> 00:37:00,466
>> Awesome.

680
00:37:01,483 --> 00:37:04,466
>> All right.

681
00:37:06,483 --> 00:37:10,466
>> So that was pretty good. But one of the things you mentioned

682
00:37:10,483 --> 00:37:14,466
in there is putting objects in the right file group, making sure

683
00:37:14,483 --> 00:37:18,466
that they go to where you expect them to. Is there a reason

684
00:37:18,483 --> 00:37:20,466
for that? Like maybe

685
00:37:21,483 --> 00:37:24,466
we keep running out of space or something?

686
00:37:24,483 --> 00:37:27,450
>> That's right. So our next topic we're going to take a look

687
00:37:27,483 --> 00:37:31,466
at, Planning for Growth and Capacity. We'll see that as a responsibility

688
00:37:32,483 --> 00:37:35,333
of the Database Administrator there are two particular pitfalls

689
00:37:35,483 --> 00:37:38,466
you want to try to avoid when it comes to growth and space.

690
00:37:38,483 --> 00:37:43,466
We'll look at those. And as far as major responsibilities, managing

691
00:37:43,166 --> 00:37:46,466
space, we'll take a look at how to grow files manually, how to

692
00:37:46,483 --> 00:37:51,466
set up auto-growth, and some others just general space- related behaviors.

693
00:37:52,233 --> 00:37:57,466
>> All right. So what are the biggest things that can go wrong?

694
00:37:57,483 --> 00:38:02,466
>> The good news is there are only really two primary space errors

695
00:38:02,483 --> 00:38:06,433
that you can create. I either fill up a file, log file or data

696
00:38:06,483 --> 00:38:07,183
file- >> Makes

697
00:38:07,266 --> 00:38:07,466
sense.

698
00:38:07,483 --> 00:38:11,466
>> Or I fill up a whole drive letter.

699
00:38:11,483 --> 00:38:14,466
>> That's a little harder to do.

700
00:38:14,483 --> 00:38:18,466
>> It has happened certainly. And in particular, this is even

701
00:38:18,483 --> 00:38:21,466
worse for a machine which has much more than just a SQL Server

702
00:38:22,333 --> 00:38:25,466
rule that may mess up other operations, so to say.

703
00:38:25,483 --> 00:38:29,350
>> So what are the ways that you can kind of take care of making

704
00:38:29,433 --> 00:38:31,466
sure that a file doesn't run out of space?

705
00:38:31,483 --> 00:38:35,466
>> Well, this is a lead in, a beautiful lead in actually towards

706
00:38:35,483 --> 00:38:40,166
our Automation lesson which will come up later. But if I am

707
00:38:40,483 --> 00:38:45,466
aware of a space problem I can easily solve it before it becomes

708
00:38:45,483 --> 00:38:48,466
a problem. Notice, as I'm showing here, I can get properties

709
00:38:48,483 --> 00:38:51,466
of a database, pick a particular file, just grow the size.

710
00:38:52,450 --> 00:38:52,466
>> All right.

711
00:38:52,483 --> 00:38:56,466
>> As long as I have the space that's not hard. But you know

712
00:38:56,233 --> 00:38:59,466
one of my rules of thumb, if I have to do something once- >> You're

713
00:38:59,483 --> 00:39:00,466
going to have to do it more than once.

714
00:39:01,483 --> 00:39:03,466
>> I'm probably going to have to do it again, so I might as well

715
00:39:03,483 --> 00:39:09,166
have a code-based version of that. Stay tuned for a version later.

716
00:39:09,250 --> 00:39:12,166
>> And is there a way where maybe you don't have to intervene

717
00:39:12,450 --> 00:39:12,466
all the time?

718
00:39:13,483 --> 00:39:18,466
>> In fact, let's take a look at auto grow options and we'll see

719
00:39:18,200 --> 00:39:22,466
that on a file by file basis we can set up auto growth. I do

720
00:39:23,0 --> 00:39:27,366
want to say we know some deviates that will have strong feelings

721
00:39:27,450 --> 00:39:31,366
about whether this might be appropriate or not, and I try to

722
00:39:31,450 --> 00:39:36,350
take a balanced approach. What I mean by that is there are, for

723
00:39:36,433 --> 00:39:41,466
a small workload, why put my hand in the metal-moving machinery?

724
00:39:41,216 --> 00:39:41,466
>> Yep.

725
00:39:41,483 --> 00:39:43,266
>> Just let it auto grow.

726
00:39:43,483 --> 00:39:47,466
But if you do, make sure you have an auto grow percentage large

727
00:39:47,483 --> 00:39:50,466
enough so that it won't happen frequently and use percentage.

728
00:39:51,483 --> 00:39:54,466
If you're going to buy into auto growth that would be, well that

729
00:39:54,483 --> 00:39:57,166
should be the way you do it.

730
00:39:57,250 --> 00:39:57,466
>> Good.

731
00:39:57,483 --> 00:40:01,466
>> For other workloads, maybe very large workloads, some are very

732
00:40:01,483 --> 00:40:04,466
strong-minded about saying this is not a good idea and you should

733
00:40:04,483 --> 00:40:09,466
only handle this, growth that is, via Automation Subsystem namely

734
00:40:09,483 --> 00:40:14,466
because I don't control when SQL Server starts to run out of space.

735
00:40:14,483 --> 00:40:18,466
It decides, hey everybody you have to wait and now I have to grow.

736
00:40:18,483 --> 00:40:24,466
>> So would it be safe to say that you manage it manually but

737
00:40:24,483 --> 00:40:28,466
you allow it to grow automatically in cases of emergency?

738
00:40:29,483 --> 00:40:32,466
>> You know, I'm really tough on blanket statements. I'm going

739
00:40:32,483 --> 00:40:33,466
to say generally yes.

740
00:40:33,483 --> 00:40:34,466
>> All right.

741
00:40:34,483 --> 00:40:38,166
>> I want to deviate and show something, deviate from the quick

742
00:40:38,483 --> 00:40:42,466
little plan here, if I go to the model database- >> Okay.

743
00:40:42,483 --> 00:40:46,466
>> And quickly get properties and options, we'll review options

744
00:40:46,483 --> 00:40:50,383
later on, we'll see a couple of auto categories,

745
00:40:52,483 --> 00:40:54,466
you know what I lost my mind for a second. I was thinking of

746
00:40:54,483 --> 00:41:00,0
something else. It's that easy.

747
00:41:00,450 --> 00:41:00,466
>> Oh, it happens.

748
00:41:01,0 --> 00:41:02,466
>> Never mind. Different movie.

749
00:41:02,483 --> 00:41:03,433
>> And one good thing about it George?

750
00:41:03,450 --> 00:41:03,466
>> Yeah?

751
00:41:04,483 --> 00:41:06,466
>> You got the peanut gallery laugh on that one.

752
00:41:06,183 --> 00:41:08,433
>> Yeah. Totally lost my mind.

753
00:41:08,450 --> 00:41:08,466
>> All right.

754
00:41:08,483 --> 00:41:10,266
>> I don't even have my kids here to blame.

755
00:41:10,350 --> 00:41:13,466
>> All right. Let's go back to this auto growth and growth thing there.

756
00:41:13,483 --> 00:41:14,466
Is there a way to monitor?

757
00:41:14,483 --> 00:41:19,466
>> There is. And in fact there are multiple ways to monitor.

758
00:41:20,483 --> 00:41:23,400
It's funny just how many ways you can solve problems with this product.

759
00:41:23,483 --> 00:41:26,466
So the first thing you'd have to do is determine when you're

760
00:41:26,483 --> 00:41:31,466
going to grow and be aware of it. So we have agent jobs automation

761
00:41:31,483 --> 00:41:34,466
that we can set up. We'll see that later. We can set up alerts

762
00:41:34,483 --> 00:41:38,233
or we can even a self-healing mechanism. I don't give away too

763
00:41:38,316 --> 00:41:39,466
much of the movie, but we'll see that later.

764
00:41:39,483 --> 00:41:40,466
>> No, no, no. Save it for later.

765
00:41:41,483 --> 00:41:45,466
>> We can collect data about storage in the Management Data Warehouse.

766
00:41:45,483 --> 00:41:46,466
>> Okay.

767
00:41:46,483 --> 00:41:49,466
>> We're going to look at that later. We have catalog views,

768
00:41:49,483 --> 00:41:53,466
dynamic management views, stored procedures, let's just say we

769
00:41:53,483 --> 00:41:57,466
have no shortage of ways to determine space.

770
00:41:57,483 --> 00:42:01,466
>> Awesome. Now I know databases typically grow forever, right?

771
00:42:01,483 --> 00:42:07,333
But what happens if somebody comes in and says hey, we are running

772
00:42:07,483 --> 00:42:10,466
out of space and all that. What do we do?

773
00:42:10,483 --> 00:42:14,466
>> We are able to, let's just say that, you're able to

774
00:42:17,483 --> 00:42:21,466
attempt to shrink a file if you want to. Now I have not met

775
00:42:21,483 --> 00:42:26,466
one database professional I don't think ever that's recommended this.

776
00:42:26,483 --> 00:42:30,466
But just note you can shrink or attempt to shrink either database

777
00:42:31,483 --> 00:42:35,466
wide or on the basis of a specific data file, you get more control

778
00:42:35,483 --> 00:42:39,466
when you use or attempt to shrink a specific data file.

779
00:42:39,483 --> 00:42:45,0
>> Yeah. Rarely if ever have I ever seen a database get smaller

780
00:42:45,483 --> 00:42:47,466
as it keeps on getting bigger.

781
00:42:47,483 --> 00:42:51,466
>> And, if you have a sense of humor Rich, isn't it kind of like everything?

782
00:42:51,483 --> 00:42:53,466
Everything wants to grow.

783
00:42:53,483 --> 00:42:54,450
>> Oh, yeah.

784
00:42:54,483 --> 00:42:58,466
>> The stuff in your closet, the government, companies, everything

785
00:42:58,483 --> 00:43:01,466
wants to grow, databases tend to grow too.

786
00:43:01,483 --> 00:43:05,216
>> Oh, yeah. Absolutely. So how about we go take a look at some

787
00:43:05,300 --> 00:43:06,466
of this stuff there bud? What do you think?

788
00:43:06,483 --> 00:43:07,466
>> There we go.

789
00:43:07,483 --> 00:43:08,466
>> All right.

790
00:43:10,483 --> 00:43:14,300
So you're going to show us how to make the data files bigger

791
00:43:14,383 --> 00:43:14,466
at this point?

792
00:43:14,483 --> 00:43:15,466
>> That's right.

793
00:43:15,483 --> 00:43:22,466
So one of the databases that we have is our little tiny database.

794
00:43:23,166 --> 00:43:27,466
I'll get properties on it, go to files, ooh, it has all of the

795
00:43:27,483 --> 00:43:32,466
four whole megs allocated to it. Let's say we go to 25 whole megs.

796
00:43:33,333 --> 00:43:37,266
Let's raise our log file size as well. So as long as I'm, well

797
00:43:37,350 --> 00:43:42,466
on top of the situation I can go ahead and assign new sizes.

798
00:43:42,483 --> 00:43:44,433
Everything is just dandy.

799
00:43:44,450 --> 00:43:44,466
>> Awesome.

800
00:43:44,483 --> 00:43:46,466
>> For a little bit of dramatic value- >> Uh-oh.

801
00:43:46,483 --> 00:43:48,466
>> Hold on, hold on.

802
00:43:48,483 --> 00:43:50,466
>> I don't like drama George.

803
00:43:50,483 --> 00:43:52,466
>> All right. We might be in the wrong room then.

804
00:43:52,483 --> 00:43:53,466
>> Son of a gun.

805
00:43:54,483 --> 00:43:56,266
All right. Keep going then. Keep going.

806
00:43:56,350 --> 00:43:57,466
>> Let's go to disk usage.

807
00:43:58,0 --> 00:43:58,466
>> Okay.

808
00:43:59,483 --> 00:44:02,466
>> So these are built-in reports to Management Studio, I didn't

809
00:44:02,483 --> 00:44:05,466
need to do anything with reporting services etc.- >> Wow.

810
00:44:05,483 --> 00:44:09,466
>> So we can see the full size of the data files etc. and other

811
00:44:09,483 --> 00:44:12,350
activities down here. I just want to make sure everybody knows

812
00:44:12,433 --> 00:44:15,466
about this. I don't really want to go into the detail of the report.

813
00:44:15,483 --> 00:44:16,466
>> Very cool.

814
00:44:16,483 --> 00:44:18,266
>> Now also here,

815
00:44:22,483 --> 00:44:26,300
let's just take this down a little bit and Danny, how visible

816
00:44:26,383 --> 00:44:31,200
is this? Kind of a little bit small? Okay. I'll try to adjust

817
00:44:31,283 --> 00:44:34,466
that for the next time around. Notice using the Alter Database

818
00:44:34,483 --> 00:44:38,466
Statement I'm able to dictate the size of a data file and I can

819
00:44:38,483 --> 00:44:43,466
use that grow. Looking a little bit closer to see it's about

820
00:44:43,483 --> 00:44:46,466
100 meg. So execute that.

821
00:44:47,483 --> 00:44:51,466
Now to play doubting Thomas, so to say, let's go to files- >> It

822
00:44:51,483 --> 00:44:53,466
will exist if you show it, right?

823
00:44:53,483 --> 00:44:57,466
>> That's right. So we see that we have 100 megs there and then

824
00:44:57,483 --> 00:45:01,466
also, should I go back to my report, you'll see the report also

825
00:45:01,483 --> 00:45:05,466
immediately updates both.

826
00:45:05,483 --> 00:45:06,466
>> Cool.

827
00:45:07,483 --> 00:45:10,466
>> So that is our drama value for the moment.

828
00:45:10,483 --> 00:45:14,466
>> All right. So you had one more topic that we wanted to talk

829
00:45:14,483 --> 00:45:21,333
about in here. And that one is going to be Service Accounts.

830
00:45:21,416 --> 00:45:24,466
>> That's right. Talk about another area where some people have

831
00:45:24,483 --> 00:45:27,466
some passionate feelings. There's a lot of passionate people

832
00:45:27,483 --> 00:45:29,466
in the SQL Server community.

833
00:45:29,483 --> 00:45:30,466
>> Yeah. You have to be.

834
00:45:30,483 --> 00:45:33,466
>> Let's take a look at our topics for this section.

835
00:45:33,483 --> 00:45:34,466
>> All right.

836
00:45:34,233 --> 00:45:38,466
>> First of all, depending on the services or features that you

837
00:45:38,483 --> 00:45:43,316
elect to install, services often, along with those- >> Okay.

838
00:45:43,400 --> 00:45:46,466
>> And along with that you have to pick a Service Account for

839
00:45:46,483 --> 00:45:51,366
those services. Strangely, when was the last time a Microsoft

840
00:45:51,450 --> 00:45:56,333
product removed a feature in a future version? That doesn't happen

841
00:45:56,416 --> 00:45:56,466
too often.

842
00:45:56,483 --> 00:45:58,466
>> No, that doesn't happen often at all.

843
00:45:58,483 --> 00:46:01,466
>> There was a button in earlier versions of SQL Server Installation

844
00:46:01,483 --> 00:46:05,466
where you could say, have every single service and use the same

845
00:46:05,483 --> 00:46:06,466
user account.

846
00:46:07,166 --> 00:46:10,466
>> That seems like it would make it a lot easier for the DBA to manage.

847
00:46:10,483 --> 00:46:14,466
>> It would if that was the choice you actually wanted.

848
00:46:16,266 --> 00:46:17,466
>> Oh.

849
00:46:17,483 --> 00:46:20,466
>> So we'll see that there are reasons to pick different service

850
00:46:20,483 --> 00:46:24,400
accounts for different services. Let's take a closer look here.

851
00:46:24,483 --> 00:46:28,466
>> All right. So what are some of the choices that you've got?

852
00:46:28,483 --> 00:46:33,466
>> Kind of a quick funny story, one of my kids accused me of being

853
00:46:33,483 --> 00:46:37,416
or acting like the Godfather, Don Vito Corleone. It was kind

854
00:46:37,483 --> 00:46:40,466
of a funny little situation, but I'm going to act like Don Vito

855
00:46:40,483 --> 00:46:44,333
and I'm going to back you into a corner giving you only one possible

856
00:46:44,416 --> 00:46:45,466
decision here.

857
00:46:46,166 --> 00:46:47,466
>> I hate it when he does this to me.

858
00:46:47,483 --> 00:46:48,433
>> So here we go.

859
00:46:48,450 --> 00:46:48,466
>> Okay.

860
00:46:48,483 --> 00:46:51,466
>> So we have two general account decisions. We can either use

861
00:46:51,483 --> 00:46:55,466
a built-in account, you see the laundry list of accounts there- >> Absolutely.

862
00:46:55,483 --> 00:46:56,333
>> Or- >> SQL

863
00:46:56,483 --> 00:46:57,466
Service, Network Service.

864
00:46:58,483 --> 00:47:00,466
>> Generally speaking, all of those are either going to give too

865
00:47:00,483 --> 00:47:03,466
many privileges or too few privileges.

866
00:47:03,483 --> 00:47:06,466
>> Okay. So that basically rules all of them out.

867
00:47:06,483 --> 00:47:09,466
>> Thank you very much. So this means you're going to have a created

868
00:47:09,483 --> 00:47:13,433
account which will be either on the local SQL Server machine

869
00:47:13,483 --> 00:47:15,316
and that SAM Server,

870
00:47:16,483 --> 00:47:20,200
Security Accounts Manager, or you're going to use a Domain Account.

871
00:47:20,283 --> 00:47:20,466
>> Okay.

872
00:47:20,483 --> 00:47:25,466
>> And because the service accounts, well in particular some may

873
00:47:25,200 --> 00:47:28,466
need to crawl out across the network, access other resources,

874
00:47:29,483 --> 00:47:31,466
you're going to use a Domain Account.

875
00:47:31,183 --> 00:47:35,466
>> Okay. So can I use the same Domain Account for all of them?

876
00:47:35,483 --> 00:47:38,233
>> Excellent, excellent question that is.

877
00:47:39,483 --> 00:47:43,466
Your, we'll just get to the quick part of the story. You're going

878
00:47:43,483 --> 00:47:47,466
to use a different account for every single box meaning if I

879
00:47:47,483 --> 00:47:51,416
have one hundred database engine instances it is worth the pain

880
00:47:51,483 --> 00:47:55,466
of creating every individual account for every instance of the

881
00:47:55,183 --> 00:47:56,466
database engine.

882
00:47:56,483 --> 00:48:01,466
>> Now that is the recommendation. That's cool. So what happens

883
00:48:01,483 --> 00:48:05,433
if six months from now you've got some new stuff and you need

884
00:48:05,450 --> 00:48:05,466
to change it?

885
00:48:05,483 --> 00:48:08,466
>> Excellent. So you'll see from installation or the screenshot

886
00:48:08,483 --> 00:48:11,466
here they can make those choices during installation, but you

887
00:48:11,483 --> 00:48:15,466
can use SQL Server Configuration Manager after the fact should

888
00:48:15,483 --> 00:48:20,466
you have a design change, a policy change, or something like that.

889
00:48:20,483 --> 00:48:23,466
You know the rule of thumb though when it comes to changing services.

890
00:48:23,483 --> 00:48:25,0
>> Tell me George.

891
00:48:25,483 --> 00:48:29,466
>> You're not going to use the normal Windows Management Console

892
00:48:29,183 --> 00:48:33,466
for managing services. You're going to use the SQL Server Configuration Manager.

893
00:48:33,483 --> 00:48:35,466
>> And why is that?

894
00:48:35,483 --> 00:48:40,466
>> Let's see. You had a good phrase for that yesterday. What was that?

895
00:48:40,483 --> 00:48:44,266
Basically all the appropriate security gets assigned when you

896
00:48:44,350 --> 00:48:47,466
use the SQL Configuration Manager.

897
00:48:47,483 --> 00:48:53,316
>> And if you use the Windows Services Applet it doesn't do what

898
00:48:53,400 --> 00:48:56,466
SQL needs it to do. So you end up having to do it manually.

899
00:48:57,250 --> 00:49:00,466
So what are some of the rules that go into choosing those Service

900
00:49:00,483 --> 00:49:01,466
Accounts, George?

901
00:49:01,483 --> 00:49:04,466
>> Yeah. The database engine in general is not going to need anything.

902
00:49:04,483 --> 00:49:08,466
I see privileges, so just create I call it a dumb-dumb user,

903
00:49:08,483 --> 00:49:11,466
name it appropriately, don't give it any special privileges,

904
00:49:11,483 --> 00:49:15,466
Domain Account. Some of the other services, Browser, Full text,

905
00:49:15,183 --> 00:49:18,466
don't even bother. Just leave the Default Accounts that are suggested

906
00:49:18,483 --> 00:49:22,433
during installation. Now one of the bigger ones is the agent.

907
00:49:22,450 --> 00:49:22,466
>> Okay.

908
00:49:22,483 --> 00:49:26,466
>> The agent has to touch other stuff so it may have to touch

909
00:49:26,483 --> 00:49:31,366
mailboxes, file system shares, other SQL Servers; so that you're

910
00:49:31,450 --> 00:49:35,416
going to give its own account and assign whatever privileges

911
00:49:35,483 --> 00:49:39,283
that that account needs. I have a link here, Configure Windows

912
00:49:39,366 --> 00:49:41,466
Service Accounts and Permissions, if you're willing to throw

913
00:49:41,483 --> 00:49:46,466
off the hockey gloves and do a little, get open-ended about what

914
00:49:46,483 --> 00:49:49,466
their suggestions are that might be of interest to you.

915
00:49:49,483 --> 00:49:52,466
>> Awesome. So can we go take a look at that real quick?

916
00:49:52,483 --> 00:49:57,466
>> Sure. Our last little bit here we'll see now that, and I

917
00:49:59,483 --> 00:50:01,466
think I put my taskbar up at the top. Yeah.

918
00:50:01,483 --> 00:50:02,466
>> Oh, that's cool.

919
00:50:02,483 --> 00:50:04,466
>> Tricky, tricky, tricky.

920
00:50:04,483 --> 00:50:08,316
>> I like that. I'll bet most people don't even know you can do that.

921
00:50:08,400 --> 00:50:12,333
>> So I'm going to go to All Programs, SQL Server 2012, by the

922
00:50:12,483 --> 00:50:15,466
way if I lose my mind and forget that later don't forget to tell me.

923
00:50:15,483 --> 00:50:19,466
I won't be embarrassed. All right. SQL Server Configuration Manager.

924
00:50:19,483 --> 00:50:24,466
So general rule of thumb in Windows, select to affect.

925
00:50:24,483 --> 00:50:25,466
>> That makes sense.

926
00:50:25,483 --> 00:50:30,466
>> General rule number two, when in doubt in Windows, right click.

927
00:50:30,483 --> 00:50:31,466
>> There you go.

928
00:50:31,483 --> 00:50:35,466
>> So let's say it was the SQL Server Agent Service of the marketing

929
00:50:35,483 --> 00:50:39,466
instance whose account I would want to change. I'd go to Properties,

930
00:50:39,483 --> 00:50:43,400
click on Browse, now make sure you're going to browse for the

931
00:50:43,483 --> 00:50:46,466
account from the appropriate location, you might need to point

932
00:50:46,483 --> 00:50:52,466
to an Active Directory Domain, and from there pick the appropriate account.

933
00:50:53,283 --> 00:50:54,466
Low and behold,

934
00:51:00,483 --> 00:51:02,466
oh, M for Mia. That's right.

935
00:51:03,483 --> 00:51:08,400
Mia as in Miami. So I would have an Agent Account created for

936
00:51:08,483 --> 00:51:12,466
this particular machine, click on Okay. Quick little security

937
00:51:12,483 --> 00:51:16,466
note, I can't change the account if I don't know the password.

938
00:51:16,483 --> 00:51:17,250
>> Awesome.

939
00:51:17,483 --> 00:51:20,466
>> So that's just a built-in feature. That's really all we had

940
00:51:20,483 --> 00:51:25,183
for this session. So we looked at taking, putting SQL Server

941
00:51:25,266 --> 00:51:29,466
on a good footing, looking at the major installation decisions;

942
00:51:29,483 --> 00:51:32,466
and now that we'll have SQL Server on a good footing, in the

943
00:51:32,483 --> 00:51:36,416
next session we'll take a look at what changes we might make,

944
00:51:36,483 --> 00:51:37,466
Post Installation

945
00:51:38,483 --> 00:51:40,466
Configuration and changes and such.

946
00:51:40,483 --> 00:51:44,366
>> Awesome. So we're going to take a short break now. We'll be

947
00:51:44,450 --> 00:51:46,466
back at the top of the hour.

948
00:51:46,483 --> 00:51:48,466
Enjoy. See you in a bit.

